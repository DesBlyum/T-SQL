-- Подготавливаем структура данных для отчета по сверке движений и остатков алкогольной продукции
--
set nocount on    
-- временная таблица для хранения списка алк. продукции 
--(будет участвовать как в самом запросе так и в 1С для формирования фильтра)
if object_id('tempdb..#ТабАлкоголь') is not null drop table #ТабАлкоголь 
    
-- выберим номенклатурные позиции с признаком алкогольной продукции
SELECT 
    ID,
    CODE,
    Name
INTO #ТабАлкоголь
FROM DimNomenklatura (nolock)
WHERE ALCOHOL = 1
GO

-- остатки получаем двумя запросами, 
-- на дату начала и дату окончания  анализа (указывается пользователем в отчете)
-- требуется видеть динамику позиций (на начало и конец периодов товаров может не быть)
--
-- остатки на начало периода
WITH ТабОстаткиНаНачало AS (
	SELECT 
		СкладКод,
		ТоварКод,
		Sum(Количество) as Количество
	FROM Данные_Остатки (nolock)
	INNER JOIN #ТабАлкоголь as Алкоголь ON Алкоголь.CODE = ТоварКод
	WHERE Дата = DATEADD(day,-1,'20220701')  
	GROUP BY
		СкладКод,
		ТоварКод
),

-- остатки на конец периода
ТабОстаткиНаКонец AS (
	SELECT 
	   СкладКод,
	   ТоварКод,
	   Sum(Количество) as Количество
	FROM Данные_Остатки (nolock)
	INNER JOIN #ТабАлкоголь as Алкоголь ON Алкоголь.CODE = ТоварКод
	WHERE Дата = '20221231' 
	GROUP BY 
		СкладКод,
	    ТоварКод
),

-- структура итоговой таблицы
-- каждая еденица алк. продукции может "засветиться" на любом из складов
-- и не обязательно что это единица когда то завозилась или есть на остатках склада
--(сделано это для того что бы не терять ошибочно перемещенный товар, либо оприходованный/списанный с нулевым кол-вом на остатках)

ТабСтруктура AS (
	SELECT 
		ТабАлкоголь.ID,
		ТабАлкоголь.CODE,
		ТабАлкоголь.Name,
		ТабДискаунтеры.ID as СкладИД,
		ТабДискаунтеры.CODE as СкладКод
	FROM #ТабАлкоголь (nolock) ТабАлкоголь
	CROSS JOIN DimSklad (nolock) ТабДискаунтеры
),

-- остатки по складам на начало и конец периода (склады совпадают)
ТабОстаткиПоСкладам AS (
	SELECT
		ID AS ТоварИД,
		CODE AS ТоварКод,
		ТабСтруктура.СкладИД,
		ТабСтруктура.СкладКод,
		ОстаткиНаНачало.СкладКод AS СкладКодНаНачало,
		ОстаткиНаКонец.СкладКод AS СкладКодНаКонец,
		ISNULL(ОстаткиНаНачало.Количество,0) AS КоличествоНаНачало,
		ISNULL(ОстаткиНаКонец.Количество,0) AS КоличествоНаКонец
	FROM ТабСтруктура
	LEFT JOIN ТабОстаткиНаНачало as ОстаткиНаНачало ON ТабСтруктура.CODE = ОстаткиНаНачало.ТоварКод and ТабСтруктура.СкладКод = ОстаткиНаНачало.СкладКод
	LEFT JOIN ТабОстаткиНаКонец as ОстаткиНаКонец ON ТабСтруктура.CODE = ОстаткиНаКонец.ТоварКод and ТабСтруктура.СкладКод = ОстаткиНаКонец.СкладКод
),

-- получение приходов 
Приходы AS(
	SELECT  
	   Дата,
	   ДокументНомер,
	   СкладКод,
	   ТоварКод,
	   Количество
	FROM Документы_Приходы (nolock)
	INNER JOIN #ТабАлкоголь as Алкоголь ON Алкоголь.CODE = ТоварКод
	WHERE Дата between '20220701' and '20221231' 
),	

-- перемещения розница 
ПеремещенияРозница AS (
	SELECT 
		ТоварКод,
		СкладОтправительКод,
	    СкладПолучательКод,
	    ДокументОснование,
	    Количество,
	    ДокументВид,
		ДокументНомер,
		Дата
	FROM Документы_ПеремещениеРозница (nolock)
	INNER JOIN #ТабАлкоголь as Алкоголь ON Алкоголь.CODE = ТоварКод
	WHERE Дата between '20220701' and '20221231'
),	

-- перемещения со складов и между филиалами
Перемещения AS (
	-- перемещения с центральных складов (отправка)
	SELECT 
		ТоварКод,
	    СкладОтправительКод,
	    СкладПолучательКод,
	    Количество * (-1) as Количество,
	    ДокументВид,
	    ДокументНомер,
	    Дата
	FROM Документы_Перемещение (nolock)
	INNER JOIN #ТабАлкоголь as Алкоголь ON Алкоголь.CODE = ТоварКод
	WHERE Дата between '20220701' and '20221231'

	UNION ALL --  в данном случае точно знаем что не будет дублей строк(лишняя операция DISTICT нам не нужна)

	-- добавляем перемещения c филиала на филиал (отправка)
	SELECT 
		ТоварКод,
		СкладОтправительКод,
		СкладПолучательКод,
		Количество * (-1) as Количество,
		ДокументВид,
		ДокументНомер,
		Дата
	FROM ПеремещенияРозница
	WHERE СкладОтправительКод not in (1,2,5) and ДокументОснование = '   0     0   '
),

--15558 |Документ СписаниеРозница
--15577 |Документ ОприходованиеРозница 
--297   |Документ Списание 
--984   |Документ Оприходование
СписанияОприходования AS (
	SELECT 
		Дата,
		ДокументВид,
		ДокументНомер,
		СкладКод,
		ТоварКод,
		Количество
	FROM Документы_КорректировкаСклада (nolock)
	INNER JOIN #ТабАлкоголь as Алкоголь ON Алкоголь.CODE = ТоварКод
	WHERE Дата between '20220701' and '20221231'  
),	

--410|Документ РасходнаяНакладная
--434|Документ ПриходнаяНакладная
--1102|Документ Расфасовка
--15449|Документ РасфасовкаРозница
--15499|Документ ПриходнаяНакладнаяРоз
Продажи AS (
	SELECT 
		Дата,
		ДокументВид,
		ДокументНомер,
		СкладКод,
		ТоварКод,
		Количество * (-1) as Количество
	FROM Регистр_Продажи (nolock)
	INNER JOIN #ТабАлкоголь as Алкоголь ON Алкоголь.CODE = ТоварКод
	WHERE Дата between '20220701' and '20221231' 
)

SELECT 
	ТоварИД,
	ОстаткиПоСкладам.ТоварКод,
	СкладИД,
	ОстаткиПоСкладам.СкладКод,
	СкладКодНаНачало,
	СкладКодНаКонец,
	КоличествоНаНачало,
	КоличествоНаКонец,
	ISNULL(Приходы.Количество,0) AS КоличествоПрихода,
	ISNULL(Перемещения.Количество,0) as КоличествоПоПеремещениямСоСклада,
	ISNULL(ПеремещенияРозница.Количество,0) as КоличествоПоПеремещениямРозница,
	ISNULL(Списания.Количество,0) as КоличествоСписания,
	ISNULL(Оприходования.Количество,0) as КоличествоОприходования,
	ISNULL(Продажи.Количество,0) as КоличествоПродажи,
	SUM(КоличествоНаКонец) OVER(PARTITION BY ТоварКод) AS ИТОГОКоличествоНаКонец,
	SUM(Перемещения.Количество) OVER(PARTITION BY ТоварКод) as ИТОГОПоПеремещениямСоСклада,
	SUM(ПеремещенияРозница.Количество) OVER(PARTITION BY ТоварКод) as ИТОГОПоПеремещениямРозница,
	SUM(Списания.Количество) OVER(PARTITION BY ТоварКод) AS ИТОГОСписания,
	SUM(Оприходования.Количество) OVER(PARTITION BY ТоварКод) AS ИТОГООприходования,
	SUM(Продажи.Количество) OVER(PARTITION BY ТоварКод) as ИТОГОПродажи
FROM ТабОстаткиПоСкладам ОстаткиПоСкладам
LEFT JOIN (Select ТоварКод, СкладКод, Sum(Количество) as Количество FROM Приходы GROUP BY ТоварКод,СкладКод) as Приходы  ON Приходы.ТоварКод = ОстаткиПоСкладам.ТоварКод and
                         Приходы.СкладКод = ОстаткиПоСкладам.СкладКод
LEFT JOIN (Select ТоварКод, СкладОтправительКод,Sum(Количество) as Количество FROM Перемещения GROUP BY ТоварКод,СкладОтправительКод) Перемещения
                                ON Перемещения.ТоварКод = ОстаткиПоСкладам.ТоварКод and 
                        Перемещения.СкладОтправительКод = ОстаткиПоСкладам.СкладКод
-- c центральных складов на филиалы и с филиала на филиал (приемка)
LEFT JOIN (Select ТоварКод, СкладПолучательКод,Sum(Количество) as Количество FROM ПеремещенияРозница WHERE ДокументОснование <> '   0     0   ' GROUP BY ТоварКод,СкладПолучательКод) ПеремещенияРозница
                        ON ПеремещенияРозница.ТоварКод = ОстаткиПоСкладам.ТоварКод and 
                        (ПеремещенияРозница.СкладПолучательКод = ОстаткиПоСкладам.СкладКод)
LEFT JOIN (Select ТоварКод, СкладКод,Sum(Количество) as Количество FROM СписанияОприходования WHERE ДокументВид IN (15558,297)  GROUP BY ТоварКод,СкладКод) as Списания  ON Списания.ТоварКод = ОстаткиПоСкладам.ТоварКод and
                         (Списания.СкладКод = ОстаткиПоСкладам.СкладКод)                                
LEFT JOIN (Select ТоварКод, СкладКод,Sum(Количество) as Количество FROM СписанияОприходования WHERE ДокументВид IN (15577,984)  GROUP BY ТоварКод,СкладКод) as Оприходования  ON Оприходования.ТоварКод = ОстаткиПоСкладам.ТоварКод and
                         (Оприходования.СкладКод = ОстаткиПоСкладам.СкладКод)                              
LEFT JOIN (Select ТоварКод, СкладКод,Sum(Количество) as Количество FROM Продажи  GROUP BY ТоварКод,СкладКод) as Продажи  ON Продажи.ТоварКод = ОстаткиПоСкладам.ТоварКод and
                         (Продажи.СкладКод = ОстаткиПоСкладам.СкладКод)                                                               
WHERE  NOT(КоличествоНаНачало = 0 and КоличествоНаКонец = 0 and Приходы.Количество IS NULL
	and Перемещения.Количество IS NULL
	and ПеремещенияРозница.Количество IS NULL
	and Списания.Количество IS NULL
	and Оприходования.Количество IS NULL
	and Продажи.Количество IS NULL
)
